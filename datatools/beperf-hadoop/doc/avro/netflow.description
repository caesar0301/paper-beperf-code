Description of NetflowRecord in Avro format
================


General
-----------

Each record in the Avro-format file describe a statistics of a 
TCP flow and HTTP fields if it carries.

Details of TCP properties
-----------

field_name,type,long decsription,unit

"devMacAddr","string","MAC address of user device"
"assocApName","string","Associated AP name when user device generating this flow"
"srcIpAddr","long","Allocated IP address to user device when it generating this flow"
"dstIpAddr","long","Server IP address what user device talks to"
"srcTcpPort","long","TCP port of user device generating this flow"
"dstTcpPort","long","TCP port of server side"
"flowL7proto","string","Flow classified lable assigned by nDPI"
"flowStartTime","double","Flow start UNIX timestamp in seconds"
"flowEndTime","double","Flow end UNIX timestamp in seconds"
"flowConnDur","double","Time duration in seconds of three-way handshake"
"src1stAckNoSynTime","double","Client first ACK segment (without SYN) timestamp (sec)"
"dst1stAckNoSynTime","double","Server first ACK segment (without SYN) timestamp (sec)"
"src1stPylTime","double","Client first segment timestamp (sec) with payload"
"dst1stPylTime","double","Server first segment timestamp (sec) with payload"
"srcPylLstTime","double","Client last segment timestamp (sec) with payload"
"dstPylLstTime","double","Server last segment timestamp (sec) with payload"
"srcTotPkts","long","Total number of packets observed form the client"
"dstTotPkts","long","Total number of packets observed form the server"
"srcHasRst","boolean","If RST segment has been sent by the client"
"dstHasRst","boolean","If RST segment has been sent by the server"
"srcAckNum","long","Number of segments with the ACK field set to 1 from the client"
"dstAckNum","long","Number of segments with the ACK field set to 1 from the server"
"srcPurAckNum","long","Number of segments with ACK field set to 1 and no data from the client"
"dstPurAckNum","long","Number of segments with ACK field set to 1 and no data from the server"
"srcPylBytUnq","long","Number of BYTES sent in the payload by the client"
"dstPylBytUnq","long","Number of BYTES sent in the payload by the server"
"srcPylPkt","long","Number of segments with payload from the client"
"dstPylPkt","long","Number of segments with payload from the server"
"srcPylByt","long","Number of bytes transmitted in the payload, including retransmissions, from the client"
"dstPylByt","long","Number of bytes transmitted in the payload, including retransmissions, from the server"
"srcPktRx","long","Number of retransmitted segments from the client"
"dstPktRx","long","Number of retransmitted segments from the server"
"srcBytRx","long","Number of retransmitted BYTES from the client"
"dstBytRx","long","Number of retransmitted BYTES from the server"
"srcPktOos","long","Number of segments observed out of sequence from the client"
"dstPktOos","long","Number of segments observed out of sequence from the server"
"srcTotSyn","long","Number of SYN segments observed (including retransmissions) from the client"
"dstTotSyn","long","Number of SYN segments observed (including retransmissions) from the server"
"srcTotFin","long","Number of FIN segments observed (including retransmissions) from the client"
"dstTotFin","long","Number of FIN segments observed (including retransmissions) from the server"
"srcHasWs","boolean","If the window scale option (RFC1323) sent by the client"
"dstHasWs","boolean","If the window scale option (RFC1323) sent by the server"
"srcHasTs","boolean","If the timestamp option (RFC1323) sent by the client"
"dstHasTs","boolean","If the timestamp option (RFC1323) sent by the server"
"srcWsVal","double","Scaling values negotiated [scale factor] by the client"
"dstWsVal","double","Scaling values negotiated [scale factor] by the server"
"srcHasSack","boolean","If SACK option set by the client"
"dstHasSack","boolean","If SACK option set by the server"
"srcSackNum","long","Number of SACK messages sent by the client"
"dstSackNum","long","Number of SACK messages sent by the server"
"srcMss","long","Maximum segment size (BYTES) declared by the client"
"dstMss","long","Maximum segment size (BYTES) declared by the server"
"srcSgmMax","long","Maximum segment size (BYTES) observed from the client"
"dstSgmMax","long","Maximum segment size (BYTES) observed from the server"
"srcSgmMin","long","Minimum segment size (BYTES) observed from the client"
"dstSgmMin","long","Minimum segment size (BYTES) observed from the server"
"srcRwinMax","long","Maximum receiver window announced (already scale by the window scale factor) in BYTES by the client"
"dstRwinMax","long","Maximum receiver window announced (already scale by the window scale factor) in BYTES by the server"
"srcRwinMin","long","Minimum receiver window announced (already scale by the window scale factor) in BYTES by the client"
"dstRwinMin","long","Minimum receiver window announced (already scale by the window scale factor) in BYTES by the server"
"srcRwinZero","long","Total number of segments declaring zero as receiver window from the client"
"dstRwinZero","long","Total number of segments declaring zero as receiver window from the server"
"srcCwinMax","long","Maximum in-flight-size (BYTES) computed as the difference between the largest sequence number so far, and the corresponding last ACK message on the reverse path. It is an estimate of the congestion window of the client side"
"dstCwinMax","long","Maximum in-flight-size (BYTES) computed as the difference between the largest sequence number so far, and the corresponding last ACK message on the reverse path. It is an estimate of the congestion window of the server side"
"srcCwinMin","long","Minimum in-flight-size of the client side"
"dstCwinMin","long","Minimum in-flight-size of the server side"
"srcCwinInt","long","First in-flight size, or total number of unack-ed BYTES sent before receiving the first ACK segment from the client"
"dstCwinInt","long","First in-flight size, or total number of unack-ed BYTES sent before receiving the first ACK segment from the server"
"srcRttAvg","double","Average RTT (sec) computed measuring the time elapsed between the data segment and the corresponding ACK facing the client side"
"dstRttAvg","double","Average RTT (sec) computed measuring the time elapsed between the data segment and the corresponding ACK facing the server side"
"srcRttMax","double","Maximum RTT (sec) observed during connection lifetime facing the client side"
"dstRttMax","double","Maximum RTT (sec) observed during connection lifetime facing the server side"
"srcRttMin","double","Minimum RTT (sec) observed during connection lifetime facing the client side"
"dstRttMin","double","Minimum RTT (sec) observed during connection lifetime facing the server side"
"srcRttStd","double","Standard deviation of the RTT (sec) facing the client side"
"dstRttStd","double","Standard deviation of the RTT (sec) facing the server side"
"srcRttCnt","long","Number of valid RTT observation from the client"
"dstRttCnt","long","Number of valid RTT observation from the server"
"srcTtlMin","long","Minimum Time To Live from the client"
"dstTtlMin","long","Minimum Time To Live from the server"
"srcTtlMax","long","Maximum Time To Live from the client"
"dstTtlMax","long","Maximum Time To Live from the server"
"srcPktRxRTO","long","Number of retransmitted segments due to timeout expiration from the client"
"dstPktRxRTO","long","Number of retransmitted segments due to timeout expiration from the server"
"srcPktRxFR","long","Number of retransmitted segments due to Fast Retransmit (three dup-ack) from the client"
"dstPktRxFR","long","Number of retransmitted segments due to Fast Retransmit (three dup-ack) from the server"
"srcPktReord","long","Number of packet reordering observed from the client"
"dstPktReord","long","Number of packet reordering observed from the server"
"srcPktNetDup","long","Number of network duplicated segments observed from the client"
"dstPktNetDup","long","Number of network duplicated segments observed from the server"
"srcPktUnk","long","Number of segments not in sequence or duplicate which are not classified as specific events from the client"
"dstPktUnk","long","Number of segments not in sequence or duplicate which are not classified as specific events from the server"
"srcPktRxPrb","long","Number of retransmitted segments to probe the receiver window (flow control) from the client"
"dstPktRxPrb","long","Number of retransmitted segments to probe the receiver window (flow control) from the server"
"srcPktRxRTOUnn","long","Number of unnecessary transmissions following a timeout expiration from the client"
"dstPktRxRTOUnn","long","Number of unnecessary transmissions following a timeout expiration from the server"
"srcPktRxFRUnn","long","Number of unnecessary transmissions following a fast retransmit from the client"
"dstPktRxFRUnn","long","Number of unnecessary transmissions following a fast retransmit from the server"
"srcHasRxSynDiffSn","boolean","If retransmitted SYN segments have different initial seqno from the client"
"dstHasRxSynDiffSn","boolean","If retransmitted SYN segments have different initial seqno from the server"
"httpPairs","","The HTTP messages contained in this TCP flow."

Details of HTTP properties
-------------------

"connDir","boolean","If the HTTP message has the same source/dest order of TCP record."
"idleDur0","double","Elapsed time (sec) between when the connection is established and before the request is started"
"reqTime","double","The timestamp in seconds of the first packet of request"
"reqDur","double","Elapsed time (sec) between when the first packet and the last packet of request"
"rspTime","double","The timestamp in seconds of the first packet of response"
"rspDur","double","Elapsed time (sec) between when the first packet and the last packet of response"
"idleDur1","double","Elapsed time between when the last response is finished and before new request is started or the tcp connection is closed"
"reqPylByt","long","The BYTE size of request (including request header length)"
"reqMethod","string","The request method (e.g., GET, PUT, HEAD)"
"reqUrl","string","The requested URI"
"reqProto","string","The request protocol (e.g., HTTP/1.0, HTTP/1.1)"
"reqHost","string", "The request HOST header value"
"reqUa","string","The request User-Agent header value"
"reqReferer","string","The request Referer header value"
"reqConn","string","The request Connection header value"
"reqKeepAlive","string","The request Keep-Alive header value"
"rspPylByt","long","The BYTE size of response (including response header length)"
"rspProto","string","The response protocol"]},
"rspCode","string","The response code (e.g., 200, 301, 404)"]},
"rspServer","string","The response Server header value"]},
"rspContentLen","string","The response Content-Length header value"]},
"rspContentType","string","The response Content-Type header value"]},
"rspContentEncode","string","The response Content-Encoding header value"]},
"rspEtag","string","The response header ETag value"]},
"rspCacheCtrl","string","The response header Cache-Control value"]},
"rspLastMod","string","The response header Last-Modified value"]},
"rspAge","string","The response header Age value"]},
"rspExpire","string","The response header Expires value"]},
"rspConn","string","The response header Connection value"]},
"rspKeepAlive","string","The response header Keep-Alive value"